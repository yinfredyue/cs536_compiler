int aaa;
bool bbb;
struct S { int a; };
struct S s;
struct T { bool b; };
struct T t;

void f(int p1, bool p2) {}
void g() {}
void h() {}

void returnVoid() {}
int returnInt() { return 1; }
bool takeIntegerReturnBool(int a){ return true; }

// Test return statement in function declaration
void emptyReturnFromVoidFunc() {
    return; // ok
}


void main() {
    // Test write
    cout << aaa; // ok
    cout << bbb; // ok

    // Test read
    cin >> aaa; // ok
    cin >> bbb; // ok


    // Test function calling
    f(1, true);  // ok
    f(aaa, bbb); // ok

    // Test arithmetic operators
    aaa = 1 + 1; // ok
    aaa = 1 - 1; // ok
    aaa = 1 * 1; // ok
    aaa = 1 / 1; // ok
    aaa++;       // ok
    aaa--;       // ok

    // Test relational operator
    bbb = 1 < 2;   // ok
    bbb = 3 <= 4;  // ok
    bbb = aaa < 5; // ok

    // Test logical operator
    bbb = true && false && bbb; // ok

    // Test if condition, while condition
    if (true) { bbb = true; } // ok

    // Test repeat condition
    repeat(5) { aaa++; } // ok

    // Test equality operator type error and assignment type error 
    bbb = 1 == 2;       // ok
    bbb = 1 != 2;       // ok
    bbb = aaa == aaa;   // ok
    bbb = returnInt() == returnInt(); // ok

    // Test assignment
    aaa = 1; // ok

    // Test equality operator on void
    bbb = returnInt() == returnInt(); // ok
}
